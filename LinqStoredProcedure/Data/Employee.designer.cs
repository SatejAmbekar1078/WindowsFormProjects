#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqStoredProcedure.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Linq")]
	public partial class EmployeeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    #endregion
		
		public EmployeeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddEmployee")]
		public int AddEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Emp_name", DbType="NVarChar(100)")] string emp_name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DOB", DbType="Date")] System.Nullable<System.DateTime> dOB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Emp_Role", DbType="NVarChar(50)")] string emp_Role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_name, dOB, emp_Role);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteEmployee")]
		public int DeleteEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> emp_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmployees")]
		public ISingleResult<GetEmployeesResult> GetEmployees()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetEmployeesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmployeesByRole")]
		public ISingleResult<GetEmployeesByRoleResult> GetEmployeesByRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Role", DbType="NVarChar(50)")] string role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), role);
			return ((ISingleResult<GetEmployeesByRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateEmployee")]
		public int UpdateEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> emp_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Emp_name", DbType="NVarChar(100)")] string emp_name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DOB", DbType="Date")] System.Nullable<System.DateTime> dOB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Emp_Role", DbType="NVarChar(50)")] string emp_Role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_id, emp_name, dOB, emp_Role);
			return ((int)(result.ReturnValue));
		}

        [Function(Name = "dbo.categorybyrole")]
        public ISingleResult<CategoryByRoleResult> categorybyrole()
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<CategoryByRoleResult>)(result.ReturnValue));
        }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employees")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emp_id;
		
		private string _Emp_name;
		
		private System.DateTime _DOB;
		
		private string _Emp_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void OnEmp_nameChanging(string value);
    partial void OnEmp_nameChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnEmp_RoleChanging(string value);
    partial void OnEmp_RoleChanged();
    #endregion
		
		public employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_name
		{
			get
			{
				return this._Emp_name;
			}
			set
			{
				if ((this._Emp_name != value))
				{
					this.OnEmp_nameChanging(value);
					this.SendPropertyChanging();
					this._Emp_name = value;
					this.SendPropertyChanged("Emp_name");
					this.OnEmp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_Role
		{
			get
			{
				return this._Emp_Role;
			}
			set
			{
				if ((this._Emp_Role != value))
				{
					this.OnEmp_RoleChanging(value);
					this.SendPropertyChanging();
					this._Emp_Role = value;
					this.SendPropertyChanged("Emp_Role");
					this.OnEmp_RoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetEmployeesResult
	{
		
		private int _emp_id;
		
		private string _Emp_name;
		
		private System.DateTime _DOB;
		
		private string _Emp_Role;
		
		public GetEmployeesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL")]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this._emp_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_name
		{
			get
			{
				return this._Emp_name;
			}
			set
			{
				if ((this._Emp_name != value))
				{
					this._Emp_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_Role
		{
			get
			{
				return this._Emp_Role;
			}
			set
			{
				if ((this._Emp_Role != value))
				{
					this._Emp_Role = value;
				}
			}
		}
	}
	
	public partial class GetEmployeesByRoleResult
	{
		
		private int _emp_id;
		
		private string _Emp_name;
		
		private System.DateTime _DOB;
		
		private string _Emp_Role;
		
		public GetEmployeesByRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL")]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this._emp_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_name
		{
			get
			{
				return this._Emp_name;
			}
			set
			{
				if ((this._Emp_name != value))
				{
					this._Emp_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_Role
		{
			get
			{
				return this._Emp_Role;
			}
			set
			{
				if ((this._Emp_Role != value))
				{
					this._Emp_Role = value;
				}
			}
		}
	}
    public partial class CategoryByRoleResult
    {
        private string _Role;

        public CategoryByRoleResult()
        {
        }

        [Column(Storage = "_Role", DbType = "NVarChar(50)")]
        public string Role
        {
            get { return this._Role; }
            set { this._Role = value; }
        }
    }
}
#pragma warning restore 1591
