//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFSP.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EmpEntities : DbContext
    {
        public EmpEntities()
            : base("name=EmpEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<employee> employees { get; set; }
    
        public virtual int AddEmployee(string emp_name, Nullable<System.DateTime> dOB, string emp_Role)
        {
            var emp_nameParameter = emp_name != null ?
                new ObjectParameter("Emp_name", emp_name) :
                new ObjectParameter("Emp_name", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var emp_RoleParameter = emp_Role != null ?
                new ObjectParameter("Emp_Role", emp_Role) :
                new ObjectParameter("Emp_Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmployee", emp_nameParameter, dOBParameter, emp_RoleParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", emp_idParameter);
        }
    
        public virtual ObjectResult<GetEmployees_Result> GetEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployees_Result>("GetEmployees");
        }
    
        public virtual int UpdateEmployee(Nullable<int> emp_id, string emp_name, Nullable<System.DateTime> dOB, string emp_Role)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var emp_nameParameter = emp_name != null ?
                new ObjectParameter("Emp_name", emp_name) :
                new ObjectParameter("Emp_name", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var emp_RoleParameter = emp_Role != null ?
                new ObjectParameter("Emp_Role", emp_Role) :
                new ObjectParameter("Emp_Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", emp_idParameter, emp_nameParameter, dOBParameter, emp_RoleParameter);
        }
    }
}
